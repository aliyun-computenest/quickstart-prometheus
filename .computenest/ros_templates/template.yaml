ROSTemplateFormatVersion: '2015-09-01'
Description:
  en: DockerCompose service template
  zh-cn: DockerCompose服务模板
Parameters:
  PayType:
    Type: String
    Label:
      en: ECS Instance Charge Type
      zh-cn: 付费类型
    Default: PostPaid
    AllowedValues:
      - PostPaid
      - PrePaid
    AssociationProperty: ChargeType
    AssociationPropertyMetadata:
      LocaleKey: InstanceChargeType
  PayPeriodUnit:
    Type: String
    Label:
      en: Pay Period Unit
      zh-cn: 购买资源时长周期
    Default: Month
    AllowedValues:
      - Month
      - Year
    AssociationProperty: PayPeriodUnit
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
              - ${PayType}
              - PostPaid
  PayPeriod:
    Type: Number
    Label:
      en: Period
      zh-cn: 购买资源时长
    Default: 1
    AllowedValues:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
    AssociationProperty: PayPeriod
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
              - ${PayType}
              - PostPaid
  EcsInstanceType:
    Type: String
    Label:
      en: Instance Type
      zh-cn: 实例类型
    AssociationProperty: ALIYUN::ECS::Instance::InstanceType
    AssociationPropertyMetadata:
      InstanceChargeType: ${PayType}
      Constraints:
        InstanceTypeFamily:
          - ecs.u1
          - ecs.e
  InstancePassword:
    NoEcho: true
    Type: String
    Description:
      en: Server login password, Length 8-30, must contain three(Capital letters, lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol in)
      zh-cn: 服务器登录密码,长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）
    AllowedPattern: '^[a-zA-Z0-9-\(\)\`\~\!\@\#\$\%\^\&\*\_\-\+\=\|\{\}\[\]\:\;\<\>\,\.\?\/]*$'
    Label:
      en: Instance Password
      zh-cn: 实例密码
    ConstraintDescription:
      en: Length 8-30, must contain three(Capital letters, lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol in)
      zh-cn: 长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）
    MinLength: 8
    MaxLength: 30
    AssociationProperty: ALIYUN::ECS::Instance::Password
  ZoneId:
    Type: String
    Label:
      en: Zone ID
      zh-cn: 可用区ID
    AssociationProperty: ALIYUN::ECS::Instance::ZoneId
  VpcId:
    Type: String
    Label:
      en: VPC ID
      zh-cn: 专有网络VPC实例ID
    AssociationProperty: 'ALIYUN::ECS::VPC::VPCId'
  VSwitchId:
    Type: String
    Label:
      en: VSwitch ID
      zh-cn: 交换机实例ID
    Default: ''
    AssociationProperty: 'ALIYUN::ECS::VSwitch::VSwitchId'
    AssociationPropertyMetadata:
      VpcId: VpcId
      ZoneId: ZoneId
Resources:
  SecurityGroup:
    Type: ALIYUN::ECS::SecurityGroup
    Properties:
      SecurityGroupName:
        Ref: ALIYUN::StackName
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
        - PortRange: 3000/3000
          Priority: 1
          SourceCidrIp: 0.0.0.0/0
          IpProtocol: tcp
          NicType: internet
        - PortRange: 9090/9090
          Priority: 1
          SourceCidrIp: 0.0.0.0/0
          IpProtocol: tcp
          NicType: internet
  InstanceGroup:
    Type: ALIYUN::ECS::InstanceGroup
    Properties:
      # 付费类型
      InstanceChargeType:
        Ref: PayType
      PeriodUnit:
        Ref: PayPeriodUnit
      Period:
        Ref: PayPeriod
      VpcId:
        Ref: VpcId
      VSwitchId:
        Ref: VSwitchId
      ZoneId:
        Ref: ZoneId
      SecurityGroupId:
        Ref: SecurityGroup
      ImageId: centos_7_9_x64_20G_alibase_20240403.vhd
      Password:
        Ref: InstancePassword
      InstanceType:
        Ref: EcsInstanceType
      SystemDiskCategory: cloud_essd
      SystemDiskSize: 200
      InternetMaxBandwidthOut: 5
      IoOptimized: optimized
      MaxAmount: 1
  RunInstallCommand:
    Type: ALIYUN::ECS::RunCommand
    Properties:
      InstanceIds:
        Fn::GetAtt:
        - InstanceGroup
        - InstanceIds
      Type: RunShellScript
      Sync: true
      Timeout: 3600
      CommandContent:
        Fn::Sub:
          - |
            #!/bin/bash
            sudo mkdir -p /etc/docker
            sudo tee /etc/docker/daemon.json <<-'EOF'
            {
                "registry-mirrors": [
                    "https://0vmzj3q6.mirror.aliyuncs.com",
                    "https://docker.m.daocloud.io",
                    "https://mirror.baidubce.com",
                    "https://dockerproxy.com",
                    "https://mirror.iscas.ac.cn",
                    "https://huecker.io",
                    "https://dockerhub.timeweb.cloud",
                    "https://noohub.ru",
                    "https://vlgh0kqj.mirror.aliyuncs.com"
                ]
            }
            EOF
            sudo systemctl daemon-reload

            yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
            yum makecache fast
            yum install -y git docker-ce jq
            systemctl enable docker
            systemctl start docker
      
            REPO_URL="https://github.com/aliyun-computenest/quickstart-prometheus"
            CLONE_DIR="/root/quickstart-prometheus"
            MAX_RETRIES=5  
            BASE_SLEEP_INTERVAL=5  
            cd /root/
            attempt=0
            sleep_interval=$BASE_SLEEP_INTERVAL
            while [ $attempt -lt $MAX_RETRIES ]; do
              if git clone "$REPO_URL" "$CLONE_DIR"; then
                echo "仓库克隆成功！"
                cd $CLONE_DIR
                docker compose up -d
                ARGUS_VERSION=3.5.7 /bin/bash -c "$(curl -sS https://cms-agent-${RegionId}.oss-${RegionId}-internal.aliyuncs.com/Argus/agent_install_ecs-1.7.sh)" >> /root/install_cms_agent.log 2>&1
                exit 0
              else
                echo "失败的尝试 $((attempt+1))，将在 $sleep_interval 秒后重试..."
                attempt=$((attempt+1))
                sleep $sleep_interval
                sleep_interval=$((sleep_interval * 2)) 
              fi
            done
            echo "多次尝试后仍然无法克隆仓库，请检查网络连接或仓库地址是否正确。"
            exit 1
          - RegionId:
              Ref: ALIYUN::Region
Outputs:
  PrometheusServerAddress:
    Description:
      en: PrometheusServerAddress.
      zh-cn: Prometheus访问页面
    Value:
      Fn::Sub:
        - 'http://${ServerAddress}:9090'
        - ServerAddress:
            Fn::Select:
            - 0
            - Fn::GetAtt:
              - InstanceGroup
              - PublicIps
  GrafanaServerAddress:
    Description:
      en: GrafanaServerAddress.
      zh-cn: Grafana访问页面
    Value:
      Fn::Sub:
        - 'http://${ServerAddress}:3000'
        - ServerAddress:
            Fn::Select:
              - 0
              - Fn::GetAtt:
                  - InstanceGroup
                  - PublicIps
Metadata:
  ALIYUN::ROS::Interface:
    ParameterGroups:
      - Parameters:
          - PayType
          - PayPeriodUnit
          - PayPeriod
        Label:
          default: 付费类型配置
      - Parameters:
          - EcsInstanceType
          - InstancePassword
        Label:
          default: 资源配置
      - Parameters:
          - ZoneId
          - VpcId
          - VSwitchId
        Label:
          default: 可用区配置
      